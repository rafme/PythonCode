#!/usr/bin/env python
import sys
import re

for line in sys.stdin:
     print re.sub(r'\xdf', '', re.sub(r'\xfe', '\001', line)) ,
     
     
#PURGEPARTITIONS
#! /usr/bin/python
from __future__ import print_function
import datetime
import time
from os.path import isfile
import sys
import os
import subprocess
import logging
import utilities
from time import strptime


def purge_partition(dirpath, retentiondays, fromdt, ptncolnm, hivedb, hivetbl):
    if retentiondays != "":
        # Check if the shell command can be executed or not.
        if utilities.chk_if_exists_in_hdfs(dirpath, 'D') != 0:
            utilities.abort_with_msg("HDFS directory does not exist , so partitions would not exist " + dirpath)
        if datetime.datetime.today().strftime('%Y%m%d') < fromdt:
            utilities.abort_with_msg("from_date can not be greater than the current date - " + fromdt)
        datedelta = (datetime.datetime.strptime(fromdt, '%Y%m%d') - datetime.timedelta(days=int(retentiondays)))
        datestring = datedelta.strftime('%Y%m%d')
        utilities.print_info("Looking for partitions older than " + str(datestring))
        shellcmd = 'hdfs dfs -ls ' + dirpath + ' |tail -n +2 | cut -d\'/\' -f7'
        p = subprocess.Popen([shellcmd], stdout=subprocess.PIPE, shell=True)
        dList = p.stdout.read()
        dList = dList.split('\n')
        for rec in dList:
            if rec == ' ' or rec == '':
                continue
            dirdate = (rec.split('=')[-1])[:8]
            if time.strptime(dirdate, '%Y%m%d') < time.strptime(datestring, '%Y%m%d'):
                utilities.print_info(dirdate + " is older than " + datestring)
                shelldeletecmd = 'hdfs dfs -rm -R -skipTrash ' + dirpath + '/' + rec
                utilities.print_info(shelldeletecmd)
                utilities.run_shell_cmd(shelldeletecmd)

        alter_cmd = "'" + "ALTER TABLE " + hivedb + "." + hivetbl + " DROP IF EXISTS PARTITION (" + ptncolnm + "<" + datestring + ")'"
        utilities.run_hql(alter_cmd, arg_mode='e')
    else:
        utilities.print_warn("There is no retention days set for the table :" + hivetbl)


          
          
#!/usr/bin/env python
import sys
import re

for line in sys.stdin:
     print re.sub(r'\001', '|', re.sub(r'\|', '^', line)) ,
